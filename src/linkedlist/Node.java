package linkedlist;

/**
 *
 * 反转单向链表  1
 *
 * 反转双向链表 1
 *
 * K 个一组翻转链表
 *
 * 合并两个排序的链表 1
 *
 * 链表中倒数第 K 个节点 1
 *
 * O(1) 时间内删除一个节点 1
 *
 * 删除链表中重复的节点 1
 *
 * 从尾到头打印链表 1
 *
 * 判断一个链表是否为回文结构  1
 *
 * 给出两个有序链表的头结点，打印出两个链表中相同的元素
 *
 * 将单向链表按某值划分成左边小、中间相等、右边大的形式  1
 *
 * 复制含有随机指针节点的链表
 *
 * 两个单链表相交的一系列问题
 *
 * 链表中环的入口节点 1
 *
 * 复杂链表的复制
 */
public class Node {
    int val;
    Node next;
    public Node(int d){
        this.val = d;
    }

}
